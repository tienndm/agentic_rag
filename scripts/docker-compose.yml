version: '3.8'

services:
  # Main application service
  query-service:
    build:
      context: ../src
      dockerfile: dockerfile
    volumes:
      - ../src:/app
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - MILVUS_HOST=milvus-standalone
      - MILVUS_PORT=19530
    depends_on:
      - milvus-standalone
      - etcd
      - minio
    networks:
      - agentic-network
    restart: unless-stopped

  embed-service:
    build:
      context: ../src
      dockerfile: embed/Dockerfile
    volumes:
      - ../src:/app
    ports:
      - "8001:8000"
    environment:
      - PYTHONPATH=/app
      - MILVUS_HOST=milvus-standalone
      - MILVUS_PORT=19530
    depends_on:
      - milvus-standalone
      - etcd
      - minio
    networks:
      - agentic-network
    restart: unless-stopped

  # Milvus standalone service
  milvus-standalone:
    image: milvusdb/milvus:v2.3.3
    container_name: milvus-standalone
    command: [ "milvus", "run", "standalone" ]
    environment:
      - ETCD_ENDPOINTS=etcd:2379
      - MINIO_ADDRESS=minio:9000
    volumes:
      - milvus_data:/var/lib/milvus
    ports:
      - "19530:19530"
      - "9091:9091"
    networks:
      - agentic-network
    depends_on:
      - etcd
      - minio

  # Etcd service for Milvus
  etcd:
    image: quay.io/coreos/etcd:v3.5.0
    container_name: milvus-etcd
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    volumes:
      - etcd_data:/etcd
    command:
      - etcd
      - --advertise-client-urls=http://127.0.0.1:2379
      - --listen-client-urls=http://0.0.0.0:2379
      - --data-dir=/etcd
    ports:
      - "2379:2379"
    networks:
      - agentic-network

  # MinIO service for Milvus
  minio:
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    container_name: milvus-minio
    environment:
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
    volumes:
      - minio_data:/data
    command: minio server /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - agentic-network

  # Create buckets required for Milvus
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c " /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin; /usr/bin/mc mb myminio/milvus-bucket --ignore-existing; /usr/bin/mc anonymous set public myminio/milvus-bucket; exit 0; "
    networks:
      - agentic-network

networks:
  agentic-network:
    driver: bridge

volumes:
  milvus_data:
  etcd_data:
  minio_data:
